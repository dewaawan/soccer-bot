# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: soccer-bot
frameworkVersion: ">=1.0.0 <2.0.0"

# plugins:
#   - serverless-dynamodb-local
#   - serverless-offline

# custom:
#   dynamodb:
#     start:
#       port: 8000
#       inMemory: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-2
  memorySize: 128
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"


functions:
  clean:
    handler: src/clean.clean
    name: ${self:service}-${self:provider.stage}-clean
  run:
    handler: src/run.run
    name: ${self:service}-${self:provider.stage}-run
    events:
      - schedule: rate(5 minutes)
  update:
    handler: src/update.update
    name: ${self:service}-${self:provider.stage}-update
    events:
      - schedule: rate(5 hours)
  list:
    handler: src/list.list
    name: ${self:service}-${self:provider.stage}-list
    events:
      - http:
        path: list
        method: get


resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
